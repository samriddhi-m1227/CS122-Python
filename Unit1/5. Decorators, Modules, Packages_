{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1LTROrPYAMxlkgYtE5tYoo4BQIU0YAH2i","timestamp":1739493368581}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"YbZIPRPgT_IO"},"outputs":[],"source":[]},{"cell_type":"markdown","source":["# Decorators\n","\n"],"metadata":{"id":"xtKbAVLhUGor"}},{"cell_type":"markdown","metadata":{"id":"xDrLfUfyRm1f"},"source":["## Decorators\n","Decorators extend the behavior of a function. Without modifying the original.\n","\n","Very powerful in large projects.\n","\n","#It is made possible because functions are objects in python.\n","\n","\n","Using a decorator involves two parts:\n","1. Defining the function that will be wrapping or “decorating” other functions\n","\n","2. Using an `@` followed by the decorator immediately before the to-be-wrapped-function is defined. The decorator function should take a function as a parameter and return a wrapper call.\n","\n","\n","Here is the core idea:"]},{"cell_type":"code","source":["\n","#This is the core idea. We just have to extend it a little to understand decorators.\n","\n","#A function can take another function as a parameter.\n","def outerFunc(func):\n","  print(\"Enter outerFunc\") #some action\n","  return func()   #function ends by calling the input function\n","\n","\n","\n","def innerFunc1():\n","  print(\"In innerFunc1\")\n","\n","def innerFunc2():\n","  print(\"In innerFunc2\")\n","\n","#we are calling outer with another function as its input\n","outerFunc(innerFunc1)  #Line1\n","outerFunc(innerFunc2)   #Line2\n","#so in this structure outterfunc is performed before any function that is sent to it."],"metadata":{"id":"ZH7tLFInWi7U","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739493391942,"user_tz":480,"elapsed":198,"user":{"displayName":"Samriddhi Matharu","userId":"15444417249591811102"}},"outputId":"ad21ada6-b245-4fa2-b3d3-85682d0a36c5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter outerFunc\n","In innerFunc1\n","Enter outerFunc\n","In innerFunc2\n"]}]},{"cell_type":"markdown","source":["The outerfunc can be made a decorator, by separating its actions into a wrapper and wrapper call.\n","\n","And we can use the decorator call neatly by just adding it with `@` infront of the innerFuncs.\n","\n","As shown below:"],"metadata":{"id":"CaT1FQUlYAUB"}},{"cell_type":"code","source":["def outerFunc(func):\n","# here we define another function which is the wrapper.\n","  def some_wrapper():\n","    print(\"This is the before operation\") #this could be anything. Think some sort of authetication check, anything that is needed before running the called function.\n","    func() #whatever function is passed\n","    print(\"This is the after operation\") #maybe display, or cleanup, or checks or something of that sort.\n","\n","  return some_wrapper() #call to the wrapper. which will run the whole thing.\n","\n","\n","@outerFunc    #this is doing the job of Line 1, but universally. with minor differences\n","def innerFunc1():\n","  print(\"In innerFunc1\")\n","\n","\n","@outerFunc    #this is doing the job of Line 1, but universally.  with minor differences\n","def innerFunc2():\n","  print(\"In innerFunc2\")\n","\n","innerFunc1\n","\n","innerFunc2"],"metadata":{"id":"DQGSCWaGYQik","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739493490463,"user_tz":480,"elapsed":184,"user":{"displayName":"Samriddhi Matharu","userId":"15444417249591811102"}},"outputId":"0da05ff4-21d8-4b16-9629-9f4b573eb511"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["This is the before operation\n","In innerFunc1\n","This is the after operation\n","This is the before operation\n","In innerFunc2\n","This is the after operation\n"]}]},{"cell_type":"markdown","source":["The @outerfunc() is initialized before the to be wrapped func\n","\n","the actual outerfunc() must have some wrapper func within it"],"metadata":{"id":"ggODDndd5Lyw"}},{"cell_type":"markdown","source":["Inputs are supported as well. We will learn more variations over the course. But here is a simple example:"],"metadata":{"id":"APFfO1kRZzMD"}},{"cell_type":"code","metadata":{"id":"zxk9gy_MRrsa","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1739493715759,"user_tz":480,"elapsed":198,"user":{"displayName":"Samriddhi Matharu","userId":"15444417249591811102"}},"outputId":"1f2f37b3-852d-40f0-f3e7-67cc1904c715"},"source":["# An example of a wrapper function with variable input arguments\n","def outerFunc(func):\n","  # This decorate function prints the name of the\n","    # function it’s wrapping when the function is defined\n","    #you will see this line printed before any of the functions run.\n","    #it is run while parsing the \"pie\" or @ symbol, that is when wrapping occurs.\n","    print(\"in decorate function, decorating  \", func.__name__)\n","    def some_wrapper(*args):\n","        print(\"Running\", func.__name__)\n","        func(*args)\n","    return some_wrapper # call to the wrapper. which will run the whole thing.\n","\n","#call inner function separately.\n","@outerFunc\n","def innerFunc1(ip1):\n","    print(ip1)\n","\n","@outerFunc\n","def innerFunc2(*manyip):      #you can use keyword arguements as well, with **\n","    print(*manyip)\n","    #print(manyip[0],manyip[1])\n","\n","#The wrapped function is called after the decorator function has completed\n","innerFunc1(\"hi\")\n","\n","innerFunc2(5,2,3,2,5)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["in decorate function, decorating   innerFunc1\n","in decorate function, decorating   innerFunc2\n","Running innerFunc1\n","hi\n","Running innerFunc2\n","5 2 3 2 5\n"]}]},{"cell_type":"markdown","source":["#Modules\n","\n","You might need to experiment with this on your local python installations. Collab is not good to experiment with custom packages.\n","\n","A module is a file containing code. It defines a group of Python functions or other objects, and the name of the module is derived from the name of the file.\n","\n","Extremly efficient in organising large projects and helps reusability.\n","\n","\n","\n","# Important Points\n","\n","\n","* A module is a file defining Python objects.\n","\n","* If the name of the module file is modulename.py, the Python name of the module is ```modulename```.\n","\n","* You can bring a module named modulename into use with the ```import modulename``` statement. After this statement is executed, objects defined in the\n","module can be accessed as modulename.objectname.\n","\n","* Specific names from a module can be brought directly into your program by using the ```from modulename import objectname ``` statement. This statement makes objectname accessible to your program without your needing to prepend it with modulename, and it's useful for bringing in names that are often used."],"metadata":{"id":"-3GvPFXYjWDO"}},{"cell_type":"code","source":[],"metadata":{"id":"JNNYObNujVv4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import sys\n","print(sys.path) # locations that Python looks for modules when you use import\n","\n","import os\n","print(os.listdir(\"/content\") )\n","\n","#import example      #usage 1\n","#from example import b     #usage 2\n","#example.a()\n","#b()\n","\n","from modulename import *     #usage3\n","#to get all objects except those starting with underscore\n","# you can still access these the normal like usage 1\n"],"metadata":{"id":"tOKsMNeoiIcf","colab":{"base_uri":"https://localhost:8080/","height":439},"executionInfo":{"status":"error","timestamp":1739494234370,"user_tz":480,"elapsed":218,"user":{"displayName":"Samriddhi Matharu","userId":"15444417249591811102"}},"outputId":"dcf06eb3-f3e1-4c5e-d4eb-33a80a0b4ddf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['/content', '/env/python', '/usr/lib/python311.zip', '/usr/lib/python3.11', '/usr/lib/python3.11/lib-dynload', '', '/usr/local/lib/python3.11/dist-packages', '/usr/lib/python3/dist-packages', '/usr/local/lib/python3.11/dist-packages/IPython/extensions', '/usr/local/lib/python3.11/dist-packages/setuptools/_vendor', '/root/.ipython']\n","['.config', 'sample_data']\n"]},{"output_type":"error","ename":"ModuleNotFoundError","evalue":"No module named 'modulename'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m<ipython-input-4-ffacc147e411>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;31m#b()\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 12\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mmodulename\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0;34m*\u001b[0m     \u001b[0;31m#usage3\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     13\u001b[0m \u001b[0;31m#to get all objects except those starting with underscore\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0;31m# you can still access these the normal like usage 1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'modulename'","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"],"errorDetails":{"actions":[{"action":"open_url","actionText":"Open Examples","url":"/notebooks/snippets/importing_libraries.ipynb"}]}}]},{"cell_type":"markdown","source":["Quick note: There are three different ways to define a **module** in Python -\n","\n","* A module can be written in Python itself\n","* A module can be written in C and loaded dynamically at run-time, like the `re` (regular expression) module.\n","* A  **built-in** module is instrinsically contained in the Python interpreter, such as the `itertools` module that provides us with the `map()` and `zip()` functions."],"metadata":{"id":"FPRNi_TvrZeq"}},{"cell_type":"markdown","source":["# Packages\n","\n","As projects grow larger, organizing code into modules may not be sufficient. Packages provide a way to structure and organize modules into directories and subdirectories, making it easier to manage large projects.\n","\n","\n","Example package with the following structure:\n","```\n","my_package/\n","│\n","├── __init__.py\n","│\n","├── math_operations.py\n","│\n","└── utils/\n","    └── string_utils.py\n","```"],"metadata":{"id":"UenoXVayue-d"}},{"cell_type":"code","source":["import my_package.ultis\n","from my_package.ultis import *\n","from my_package.ultis import random_string\n","\n","print(random_string(\"hi\"))\n","print(\"hi\")"],"metadata":{"id":"iYrw-fdqxD-H","colab":{"base_uri":"https://localhost:8080/","height":384},"executionInfo":{"status":"error","timestamp":1739494412982,"user_tz":480,"elapsed":172,"user":{"displayName":"Samriddhi Matharu","userId":"15444417249591811102"}},"outputId":"044da59b-e79c-4a31-8efb-2bc4b8ef0bd0"},"execution_count":null,"outputs":[{"output_type":"error","ename":"ModuleNotFoundError","evalue":"No module named 'my_package'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m<ipython-input-6-3fdd50e65ce9>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mimport\u001b[0m \u001b[0mmy_package\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0multis\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mmy_package\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0multis\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mmy_package\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0multis\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mrandom_string\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrandom_string\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"hi\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'my_package'","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"],"errorDetails":{"actions":[{"action":"open_url","actionText":"Open Examples","url":"/notebooks/snippets/importing_libraries.ipynb"}]}}]},{"cell_type":"markdown","source":["## What's the purpose of `__init__.py`?\n","The `__init__.py` file serves multiple purposes in Python packages. Here's a breakdown of its main purposes:\n","\n","*  **Package Recognition**: The presence of an `__init__.py` file in a directory signals to Python that the directory should be treated as a Python package.\n","\n","* **Initialization**: The `__init__.py` file is executed when the package is imported.\n","\n","* **Exporting Names**: You can use the `__all__` attribute in the `__init__.py` file to specify which symbols (variables, functions, classes) should be exported when someone imports the package using the `from package import *` syntax.\n","\n","* **Submodule Imports**: The `__init__.py` file can also be used to import submodules or subpackages, making them accessible directly from the package namespace.\n","\n","* **Documentation**: The `__init__.py` file can include documentation strings (docstrings) to provide information about the package and its contents.\n","\n"],"metadata":{"id":"-D6vAN81y8NF"}},{"cell_type":"code","source":["from my_package.ultis import *\n","\n","# you can use \"as\" keyword to alias imported objects.\n","# import my_package.math_ops.subtract as abc\n","\n","\n","str1=\"hello\"\n","print(reverse_string(str1))\n","print(random_string())\n"],"metadata":{"id":"xTH9uGTA1Z8U","colab":{"base_uri":"https://localhost:8080/","height":384},"executionInfo":{"status":"error","timestamp":1739494510284,"user_tz":480,"elapsed":172,"user":{"displayName":"Samriddhi Matharu","userId":"15444417249591811102"}},"outputId":"60a66f92-f5b0-46ac-96e5-870ff7d20983"},"execution_count":null,"outputs":[{"output_type":"error","ename":"ModuleNotFoundError","evalue":"No module named 'my_package'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m<ipython-input-7-97895bd09116>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mmy_package\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0multis\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m# you can use \"as\" keyword to alias imported objects.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m# import my_package.math_ops.subtract as abc\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'my_package'","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"],"errorDetails":{"actions":[{"action":"open_url","actionText":"Open Examples","url":"/notebooks/snippets/importing_libraries.ipynb"}]}}]},{"cell_type":"markdown","source":["#In-Class Hands-on Activity.\n","Work in groups of 2 for discussion. Both need to submit the link separately.\n","\n","Create a package with the following structure:\n","\n","```\n","shapes/\n","│\n","├── __init__.py\n","│\n","├── circle.py (has \"area\" function pi*r^2)\n","│\n","└── rectangle.py (has \"area\" function l*w)\n","```\n","\n","Note: Both functions must be named \"area\" inside theier respective packages.\n","\n","\n","\n","Import the package and use it in a program where three variables are given:\n","\n","radius = 7\n","\n","length = 5\n","\n","width = 10\n","\n","print out the area using the package functions.\n","\n","\n"],"metadata":{"id":"6YbXvvWt2Yyl"}},{"cell_type":"code","source":["# your code goes here\n","import os\n","\n","# Create the \"shapes\" folder\n","os.makedirs('/content/shapes', exist_ok=True)\n","\n","\n","\n","#the above is to check whats in that dir\n","#it also appends content in front of all\n","\n","from shapes.circle import area as circle_area\n","from shapes.rectangle import area as rectangle_area\n","\n","# Given values\n","radius = 7\n","length = 5\n","width = 10\n","\n","# Calculate and print areas\n","print(\"Circle Area:\", circle_area(radius))\n","print(\"Rectangle Area:\", rectangle_area(length, width))"],"metadata":{"id":"qmhJgNGV5KMZ","colab":{"base_uri":"https://localhost:8080/","height":384},"executionInfo":{"status":"error","timestamp":1740607270405,"user_tz":480,"elapsed":12,"user":{"displayName":"Samriddhi Matharu","userId":"15444417249591811102"}},"outputId":"38ebf38b-6ae0-4898-abec-a99444ceb95f"},"execution_count":2,"outputs":[{"output_type":"error","ename":"ModuleNotFoundError","evalue":"No module named 'shapes.circle'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-c135b361236b>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;31m#it also appends content in front of all\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 12\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mshapes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcircle\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0marea\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mcircle_area\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     13\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mshapes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrectangle\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0marea\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mrectangle_area\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'shapes.circle'","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"],"errorDetails":{"actions":[{"action":"open_url","actionText":"Open Examples","url":"/notebooks/snippets/importing_libraries.ipynb"}]}}]},{"cell_type":"markdown","source":["lecture notes for recording:\n","\n","- packages have modules within them\n","\n","- innit does not have to be filled\n","\n"," this can go in innit file\n","__all__=[] #can import all modules\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n"],"metadata":{"id":"zq_p_OtBp3oT"}}]}